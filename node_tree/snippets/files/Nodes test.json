{
    "name": "Nodes test",
    "uid": "6DE23",
    "function": "                    SNIPPET_VARS = {\"nodes\": [], \"node\": None, }\n                    def nodes_test():\n                        try:\n                             SNIPPET_VARS[\"nodes\"] = bpy.data.node_groups[0].nodes\n                            try: exec(r\"SNIPPET_VARS['nodes'].active = SNIPPET_VARS['node']\")\n                            except Exception as exc: sn_handle_script_line_exception(exc, r\"SNIPPET_VARS['nodes'].active = SNIPPET_VARS['node']\")\n                            sn_print(\"Test\",sn_cast_string(SNIPPET_VARS[\"node\"]))\n                            \n                            \n                            \n                            \n                        except Exception as exc:\n                            print(str(exc) + \" | Error in function Nodes test\")\n                    ",
    "register": "\n",
    "unregister": "\n",
    "properties": [],
    "func_name": "nodes_test",
    "inputs": [
        {
            "idname": "SN_ExecuteSocket",
            "name": "Run Function",
            "subtype": "NONE",
            "attributes": {}
        }
    ],
    "outputs": [
        {
            "idname": "SN_ExecuteSocket",
            "name": "Execute",
            "subtype": "NONE",
            "attributes": {}
        }
    ],
    "code_imperative": "\n                    def sn_handle_script_line_exception(exc, line):\n                        print(\"# # # # # # # # SCRIPT LINE ERROR # # # # # # # #\")\n                        print(\"Line:\", line)\n                        raise exc\n                    ",
    "variable_definitions": {
        "node": [
            "Node",
            "BLEND_DATA"
        ],
        "nodes": [
            "Nodes",
            "BLEND_DATA"
        ]
    },
    "function_definitions": {},
    "property_identifiers": {}
}